// È°∂ÈÉ®Êìç‰ΩúÊ†èÁªÑ‰ª∂
const TopBar = ({ user, notifications, onNotificationClick, onLogout }) => {
    const { Badge, Dropdown, Avatar, Space, Button, Tooltip, Modal } = antd;
    
    // Áî®Êà∑ËèúÂçï
    const userMenuItems = [
        { key: 'profile', label: '‰∏™‰∫∫‰∏≠ÂøÉ' },
        { key: 'settings', label: 'Ë¥¶Êà∑ËÆæÁΩÆ' },
        { type: 'divider' },
        { key: 'logout', label: 'ÈÄÄÂá∫ÁôªÂΩï', danger: true }
    ];

    const handleUserMenuClick = ({ key }) => {
        if (key === 'logout') {
            Modal.confirm({
                title: 'Á°ÆËÆ§ÈÄÄÂá∫',
                content: 'ÊÇ®Á°ÆÂÆöË¶ÅÈÄÄÂá∫ÁôªÂΩïÂêóÔºü',
                okText: 'Á°ÆÂÆö',
                cancelText: 'ÂèñÊ∂à',
                onOk: () => onLogout && onLogout(),
            });
        }
    };

    const userMenu = { items: userMenuItems, onClick: handleUserMenuClick };

    // ÈÄöÁü•ËèúÂçï
    const notificationItems = notifications?.length > 0
        ? [
            ...notifications.slice(0, 5).map((notif, i) => ({
                key: `notif-${i}`,
                label: React.createElement('div', {},
                    React.createElement('div', { style: { fontWeight: 'bold' } }, notif.title),
                    React.createElement('div', { style: { fontSize: '12px' } }, notif.content)
                ),
            })),
            { type: 'divider' },
            { key: 'view-all', label: React.createElement('div', { style: { textAlign: 'center' } }, 'Êü•ÁúãÂÖ®ÈÉ®') },
        ]
        : [{ key: 'empty', label: React.createElement('div', { style: { textAlign: 'center', padding: '12px' } }, 'ÊöÇÊó†ÈÄöÁü•') }];

    const notificationMenu = { items: notificationItems, onClick: onNotificationClick };
    
    const unreadCount = notifications?.filter(n => !n.read).length || 0;

    const displayName = user?.name || user?.username || 'ÁÆ°ÁêÜÂëò';
    const roleLabel = user?.roleLabel || 'ÁÆ°ÁêÜÂëò';
    const department = user?.department || 'Á≥ªÁªüÁÆ°ÁêÜÈÉ®';

    return React.createElement('div', { className: 'top-bar' },
        // Left Side
        React.createElement('div', { className: 'top-bar-left' },
            React.createElement('h1', { className: 'page-title-in-bar' }, 'ËøêËê•ÁÆ°ÁêÜÂêéÂè∞'),
        ),
        // Right Side
        React.createElement('div', { className: 'top-bar-right' },
            React.createElement(Space, { size: "middle" },
                React.createElement(Tooltip, { title: "Â∏ÆÂä©ÊñáÊ°£" },
                    React.createElement(Button, { 
                        shape: 'circle',
                        onClick: () => window.open('https://github.com/kcaaaa/renmin-chenggui-admin/wiki', '_blank')
                    }, '‚ùì')
                ),
                React.createElement(Tooltip, { title: "ÈÄöÁü•" },
                    React.createElement(Dropdown, { menu: notificationMenu, trigger: ['click'] },
                        React.createElement(Badge, { count: unreadCount, size: 'small' },
                            React.createElement(Button, { shape: 'circle' }, 'üîî')
                        )
                    )
                ),
                React.createElement(Dropdown, { menu: userMenu, trigger: ['click'] },
                    React.createElement(Space, { style: { cursor: 'pointer' } },
                        React.createElement(Avatar, {
                            style: { backgroundColor: '#1890ff' },
                            size: 'default'
                        }, displayName.charAt(0)),
                        React.createElement('div', { style: { display: 'flex', flexDirection: 'column', alignItems: 'flex-start' } }, [
                            React.createElement('span', { 
                                key: 'name',
                                style: { fontWeight: '500', fontSize: '14px' } 
                            }, displayName),
                            React.createElement('span', { 
                                key: 'role',
                                style: { 
                                    fontSize: '12px', 
                                    color: '#8c8c8c',
                                    lineHeight: '1.2'
                                } 
                            }, roleLabel)
                        ])
                    )
                )
            )
        )
    );
};

window.TopBar = TopBar; 